@page "/usertasks"
@using BlazorAppMaybePoc.Shared

<div class="container">
    <h1>User Tasks</h1>
    <div class="mb-3">
        <label for="userId" class="form-label">User ID:</label>
        <input id="userId" @bind="ViewModel.UserId" type="text" class="form-control" style="width:auto; display:inline-block;"/>
        <button @onclick="LoadTasksAsync" class="btn btn-primary">Load Tasks</button>
    </div>

    <div class="mt-4">
        <h2>Add New Task</h2>
        <EditForm Model="@ViewModel" OnValidSubmit="@CreateAsync">
            <div class="form-group">
                <label for="title">Title:</label>
                <InputText id="title" class="form-control" @bind-Value="ViewModel.Title"/>
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <InputTextArea id="description" class="form-control" @bind-Value="ViewModel.Description"/>
            </div>
            <div class="form-group">
                <label for="dueDate">Due Date:</label>
                <InputDate id="dueDate" class="form-control" @bind-Value="ViewModel.DueDate"/>
            </div>
            <div class="form-group">
                <label for="status">Status:</label>
                <InputSelect id="status" class="form-control" @bind-Value="ViewModel.Status">
                    <option value="@Status.NotStarted">Not Started</option>
                    <option value="@Status.InProgress">In Progress</option>
                    <option value="@Status.Completed">Completed</option>
                </InputSelect>
            </div>
            <button type="submit" class="btn btn-success" disabled="@(!ViewModel.IsValid)">Add Task</button>

        </EditForm>
    </div>

    @if (ToDoItems is not null)
    {
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>
                    Due Date
                    <button @onclick="() => SortTasksAsync(nameof(ToDoItem.DueDate))">
                        <span class="@GetSortIconClass(nameof(ToDoItem.DueDate))"></span>
                    </button>
                </th>
                <th>
                    Priority
                    <button @onclick="() => SortTasksAsync(nameof(ToDoItem.Priority))">
                        <span class="@GetSortIconClass(nameof(ToDoItem.Priority))"></span>
                    </button>
                </th>
                <th>
                    Status
                    <button @onclick="() => SortTasksAsync(nameof(ToDoItem.Status))">
                        <span class="@GetSortIconClass(nameof(ToDoItem.Status))"></span>
                    </button>
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in ToDoItems)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.Description</td>
                    <td>@item.DueDate.ToShortDateString()</td>
                    <td>@item.Priority</td>
                    <td>@item.Status</td>
                </tr>
            }
            </tbody>
        </table>
    }
</div>